<!-- https://www.naukri.com/code360/problems/topological-sort_982938?topList=love-babbar-dsa-sheet-problems&leftPanelTab=0&utm_source=youtube&utm_medium=affiliate&utm_campaign=Lovebabbar&leftPanelTabValue=PROBLEM -->



#include <stack>

void topologicalSortUtil(vector<vector<int>> &adj, vector<bool> &visited, stack<int> &stk, int src) {
    visited[src] = true;  

    for(int node : adj[src]) {
        if(!visited[node]) {
            topologicalSortUtil(adj, visited, stk, node);
        }
    }
    stk.push(src);
}

vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e) {
    
    vector<vector<int>> adj(v);
    for(int i = 0; i < e; i++) {
        adj[edges[i][0]].push_back(edges[i][1]);
    } 

    vector<bool> visited(v);
    stack<int> stk;

    for(int i = 0; i < v; i++) {
        if(!visited[i]) {
            topologicalSortUtil(adj, visited, stk, i);
        }
    }

    vector<int> result;
    while(!stk.empty()) {
        result.push_back(stk.top());
        stk.pop();
    }

    return result;
}