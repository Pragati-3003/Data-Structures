<!-- https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/description/ -->


struct Node {
    Node* links[2];
};

class Trie{
    private:
        Node* root;
    public:
        Trie()  {
            root = new Node();
        }

        void insert(int num){
            Node* curr = root;

            for(int i = 31 ; i >= 0 ; --i){
                int bit = (num >> i) & 1;
                if(curr -> links[bit] == NULL){
                    curr -> links[bit] = new Node();
                }
                curr = curr -> links[bit];
            }         
        }

        int getMax(int num){
            Node* curr = root;
            int xorMax = 0;
            for(int i = 31 ; i >= 0 ; --i){
                int bit = (num >> i) & 1;
                if(curr -> links[1 - bit] != NULL){
                    xorMax += (1 << i);
                    curr = curr -> links[1 - bit];
                } else {
                    curr = curr -> links[bit];
                    // xorMax += (1 << bit);
                }
            }

            return xorMax;
        }
};

class Solution {
public:
    int findMaximumXOR(vector<int>& nums) {
        Trie t;

        for(auto &num : nums){
            t.insert(num);
        }

        int ans = 0;
        for(auto &e : nums){
            ans = max(ans, t.getMax(e));
        }

        return ans;
    }
};