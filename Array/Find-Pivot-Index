724. Find Pivot Index

<!-- Question Link ==> https://leetcode.com/problems/find-pivot-index/description/ -->


Approach 1 :-

class Solution {
public:
    int pivotIndex(vector<int>& nums) {
        int right = accumulate(nums.begin(),nums.end(),0);
        int left = 0;

        for(int i=0;i<nums.size();i++){
            right -= nums[i];
            if(right == left) return i;
            left += nums[i];
        }

        return -1;
    }
};


Approach 2:-

class Solution {
public:
    int pivotIndex(vector<int>& nums) {
     int n=nums.size();
     if (n==0){
         return -1;
     }
     int left[n];
     int right[n];
     left[0]=nums[0];
     right[n-1]=nums[n-1];
     for(int i=1;i<n;i++){
             left[i]=nums[i]+left[i-1];
             right[n-1-i]=nums[n-1-i]+right[n-i];
     }
     for(int i=0;i<n;i++)
     if(left[i]==right[i])
     return i;
     return -1;
    }
};
